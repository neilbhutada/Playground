{
    "experiment_config": {
        "experiment_name": "AAATEST_CLUST_CUST_HP",
        "environment": "GKE",
        "run_feature_forecasting": false,
        "run_hp_tuning": true,
        "run_ml_train": true,
        "run_ts_train": true,
        "run_glm_train": false,
        "run_stacking_ensemble": true,
        "run_stacking": true,
        "run_model_selection": true,
        "run_model_eval": true,
        "run_backtesting": false,
        "run_pipeline": true,
        "run_fwd_fcst": false,
        "spark_config": {
            "spark.executor.cores": 1,
            "spark.executor.memory": "10g",
            "spark.driver.cores": 1,
            "spark.driver.memory": "10g",
            "spark.driver.maxResultSize": "10g",
            "spark.files.maxPartitionBytes": "10g",
            "spark.sql.shuffle.partitions": 200,
            "spark.sql.files.maxRecordsPerFile": 53268,
            "spark.sql.broadcastTimeout": 36000,
            "spark.sql.autoBroadcastJoinThreshold": -1,
            "spark.sql.execution.arrow.pyspark.enabled": "true"
        },
        "blueprint_base_path": "",
        "blueprint_file_ext": ".py",
        "feature_forecasting_blueprint": "modeling/M00_feature_forecasting",
        "hp_blueprint": "modeling/M02_hyperparameter_tuning",
        "ml_train_blueprint": "modeling/M03_trees",
        "ts_train_blueprint": "modeling/M03_time_series",
        "glm_train_blueprint": "modeling/M03_glm",
        "stacking_ensemble_blueprint": "modeling/M04_stacking_ensembling",
        "model_selection_blueprint": "modeling/M05_model_selection",
        "model_eval_blueprint": "modeling/M06_model_evaluation",
        "backtesting_blueprint": "modeling/M07_backtesting",
        "pipeline_blueprint": "Pipeline"
    },
    "data_config": {
        "data_path": "gs://db-shared/sample_data/",
        "file_store_type": "csv",
        "dba_mrd": "gs://db-shared/processed/monthly_mrd_customer_filtered_outliertrtd_order.csv",
        "dba_feature_forecast": "gs://db-shared/processed/monthly_mrd_customer_filtered_outliertrtd_order.csv",
        "model_id_var": "model_id",
        "target_var": "total_monthly_orders",
        "time_var": "time_index",
        "date_var": "Month_start_date",
        "overwrite": "overwrite",
        "id_vars": [],
        "mod_vars": ["EAN/UPC",
 "total_consmr_units_lag12",
 "net_price_lag12",
 "Consumption_Units_PEI_lag12",
 "Inc_Consumption_Units_Lift_lag12",
 "Inc_Value_Lift_lag12",
 "Incremental_Consumption_Units_lag12",
 "Incremental_Value_lag12",
 "No_of_Periods_Selling_lag12",
 "No_of_Periods_in_Dist_Wtd_lag12",
 "No_of_Stores_in_Dist_lag12",
 "Base_Consumption_Units_ROS_Wtd_lag12",
 "Consumption_Units_Percent_off_Promo_lag12",
 "Consumption_Units_Percent_on_Promo_lag12",
 "Consumption_Units_Percent_on_Promo_Index_to_Category_lag12",
 "Consumption_Units_Return_per_percent_Discount_lag12",
 "No_of_Effective_Products_in_Dist_Wtd_lag12",
 "Num_Dist_Avg_lag12",
 "TDPs_lag12",
 "Wtd_Dist_Avg_lag12",
 "unit_price_lag12",
 "Promo_Base_Consumption_Units_percentage_lag12",
 "Promo_Base_Value_percentage_lag12",
 "Promo_Consumption_Units_percentage_lag12",
 "Promo_Value_percentage_lag12",
 "Promo_Volume_percentage_lag12",
 "unit_price_ffill",
 "Segment_A",
 "Segment_B",
 "Segment_C",
 "Segment_X",
 "Segment_Y",
 "Segment_Z",
 "Subsegment_code",
 "Segment_code",
 "Product_family",
 "Subcategory_code",
 "Category_code",
 "Subsegmntcode_UPC_count",
 "Segmntcode_UPC_count",
 "Prodfamily_UPC_count",
 "Subcatcode_UPC_count",
 "Categorycode_UPC_count",
 "Subsegment_code_idx",
 "Segment_code_idx",
 "Product_family_idx",
 "Subcategory_code_idx",
 "Category_code_idx",
 "total_monthly_orders_lag12",
 "Customer_idx",
 "EAN/UPC_TargetEncoded",
 "cpi",
 "Tmax",
 "Tmin",
 "afdays",
 "rainmm",
 "sunhrs",
 "boxing_day",
 "boxing_day_substitute_bank",
 "christmas",
 "christmas_substitute_bank",
 "easter",
 "easter_monday",
 "fathers_day",
 "good_friday",
 "may_day",
 "mothers_day",
 "new_year",
 "new_year_observed",
 "queen_platinum_jubilee",
 "spring_bank",
 "boxing_day_lag4_months",
 "boxing_day_lead4_months",
 "boxing_day_substitute_bank_lag4_months",
 "boxing_day_substitute_bank_lead4_months",
 "christmas_lag4_months",
 "christmas_lead4_months",
 "christmas_substitute_bank_lag4_months",
 "christmas_substitute_bank_lead4_months",
 "easter_lag4_months",
 "easter_lead4_months",
 "easter_monday_lag4_months",
 "easter_monday_lead4_months",
 "fathers_day_lag4_months",
 "fathers_day_lead4_months",
 "good_friday_lag4_months",
 "good_friday_lead4_months",
 "may_day_lag4_months",
 "may_day_lead4_months",
 "mothers_day_lag4_months",
 "mothers_day_lead4_months",
 "new_year_lag4_months",
 "new_year_lead4_months",
 "new_year_observed_lag4_months",
 "new_year_observed_lead4_months",
 "queen_platinum_jubilee_lag4_months",
 "queen_platinum_jubilee_lead4_months",
 "spring_bank_lag4_months",
 "spring_bank_lead4_months",
 "aa_battery_4_avgprice",
 "spend_volume_index",
 "house_inflation_rate",
 "gas_inflation_rate",
 "food_inflation_rate",
 "offer_price",
 "price_off",
 "DISPLAY_OFD",
 "DISPLAY_Others",
 "DISPLAY_Shelf",
 "discount",
 "promo_depth_ofd",
 "promo_depth_others",
 "promo_depth_shelf",
 "offer_price_lag12",
 "price_off_lag12",
 "DISPLAY_OFD_lag12",
 "DISPLAY_Others_lag12",
 "DISPLAY_Shelf_lag12",
 "discount_lag12",
 "promo_depth_ofd_lag12",
 "promo_depth_others_lag12",
 "promo_depth_shelf_lag12"],
        "log_vars": [],
        "dbp_reg_coef_limits": "DBA_MRD_10k_reduced_DBP_REG_COEF_LIMITS",
        "fill_na_value": null,
        "base_path": "gs://db-shared/experiments/"
    },
    "forecast_config": {
        "num_fwd_fcst": 12,
        "period": "M",
        "segment_level": ["Segment_ABC", "Segment_XYZ"],
        "recursive_predictions": false,
        "decimals": 2,
        "whole_number": false,
        "round_up": true,
        "refit": true,
        "train_ind_var": "TRAIN_IND",
        "val_ratio": 0.2
    },
    "backtesting_config": {
        "backtestPartitionTimeIndices": [
            [0,1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32,33,34,35,36]
        ],
        "partition": [{
            "backTestName": "Backtest1",
            "trainStartDate": "02/01/2013",
            "holdOutEndDate": "05/01/2015",
            "timeSplitMap": {
                "trainPercentage": "80%",
                "validatePercentage": "20%",
                "trainRange": "02/05/2013-08/06/2013",
                "validateRange": "08/06/2013-04/01/2014",
                "selectRange": "04/01/2014-10/14/2014",
                "holdoutRange": "10/14/2014-04/28/2015"
            }
        }],
        "backtest_flag": false
    },
    "ml_tree_config": {
        "stage_1_algos": ["RandomForest", "XGBoost", "LightGBM", "CatBoost"],
        "downsample_rate": 1,
        "max_iter": 1,
"quantile_param_grid": {
            "alpha": ["uniform", "float", 0.5, 2.0],
            "max_depth": ["uniform", "int", 3, 7],
            "learning_rate": ["uniform", "float", 0.01, 0.2],
            "feature_fraction": ["uniform", "float", 0.7, 0.9],
            "bagging_fraction": ["uniform", "float", 0.8, 0.95],
            "metric": ["choice", "str", ["tweedie"]],
            "tweedie_variance_power": ["uniform", "float", 1.1, 1.9]
        },
        "lgbm_param_grid": {
            "max_depth": ["uniform", "int", 3, 7],
            "min_gain_to_split": ["uniform", "int", 0, 4],
            "learning_rate": ["uniform", "float", 0.01, 0.2],
            "min_child_weight": ["uniform", "float", 0.001, 0.005],
            "subsample": ["uniform", "float", 0.65, 0.95],
            "colsample_bytree": ["uniform", "float", 0.5, 0.95],
            "min_data_in_bin": ["uniform", "int", 5, 20],
            "min_data_in_leaf": ["uniform", "int", 5, 100],
            "metric": ["choice", "str", ["tweedie", "rmse"]],
            "tweedie_variance_power": ["uniform", "float", 1.1, 1.9]
        },
        "rf_param_grid": null,
        "xgb_param_grid": {
            "n_estimators": ["uniform", "int", 50, 500],
            "learning_rate": ["uniform", "float", 0.01, 0.2],
            "max_depth": ["uniform", "int", 3, 7],
            "subsample": ["uniform", "float", 0.75, 1.0],
            "max_bin": ["uniform", "int", 50, 200],
            "colsample_bytree": ["uniform", "float", 0.75, 1.0],
            "objective": ["choice", "str",
                ["reg:tweedie", "reg:squarederror"]
            ],
            "tweedie_variance_power": ["uniform", "float", 1.1, 1.9]
        },
        "cat_param_grid": {
            "learning_rate": ["uniform", "float", 0.05, 0.2],
            "depth": ["uniform", "int", 3, 5],
            "subsample": ["uniform", "float", 0.75, 1.0],
            "l2_leaf_reg": ["uniform", "float", 2.0, 10.0],
            "iterations": ["uniform", "int", 50, 250],
            "loss_function": ["choice", "str",
                [
                    "Tweedie:variance_power=1.01",
                    "Tweedie:variance_power=1.1",
                    "Tweedie:variance_power=1.3",
                    "Tweedie:variance_power=1.5",
                    "Tweedie:variance_power=1.7",
                    "Tweedie:variance_power=1.9",
                    "RMSE"
                ]
            ]
        },
        "default_param": {
            "RF_PARAMS": {
                "criterion": "squared_error",
                "n_estimators": 100,
                "max_depth": 8,
                "max_features": 0.65,
                "max_samples": 0.85
            },
            "XGB_PARAMS": {
                "eta": 0.05,
                "max_depth": 5,
                "min_child_weight": 20,
                "subsample": 0.80,
                "gamma": 0.05
            }
        },
        "train_val_split_ratio": 0.20,
        "seeding": 123
    },
    "glm_config": {
        "glm_algos": ["Lasso"],
        "reg_lasso": true,
        "reg_stage2": false,
        "l1_ratio_stage1": 1,
        "l1_ratio_stage2": 0,
        "filter_zeros": true,
        "retain_vars": [],
        "dist_family": "gaussian",
        "distinct_target_var": 2,
        "num_alphas": 5,
        "unconstrained": true,
        "log_stage1_vars": true,
        "pred_col": "pred",
        "n_batch": 2,
        "segment": true,
        "seeding": 123
    },
    "ts_config": {
        "ts_algos": ["SingleExpSmoothing", "AutoARIMA"],
        "seasonal_periods": 3,
        "ts_algo_kwargs": {
            "SingleExpSmoothing": {
                "alpha": 0.2
            },
            "DoubleExpSmoothing": {},
            "TripleExpSmoothing": {},
            "ARIMA": {
                "order": [1, 0, 1]
            },
            "SARIMA": {
                "order": [1, 0, 1],
                "seasonal_order": [1, 1, 1]
            },
            "AutoARIMA": {
                "max_p": 5,
                "max_d": 2,
                "max_q": 5
            },
            "AutoSARIMA": {
                "max_p": 5,
                "max_d": 2,
                "max_q": 5,
                "max_P": 1,
                "max_D": 1,
                "max_Q": 1
            }
        },
        "date_config": {
            "date_var": "Month_start_date",
            "time_var": "time_index",
            "target_var": "total_monthly_orders",
            "model_id_var": "model_id",
            "frequency": "M"
        }
    },
    "se_config": {
        "run_stacking": true,
        "stage_2_algos": ["CatBoost"],
        "use_features_for_stage2": false,
        "tune_stage2_algos": false,
        "run_ensembling": true,
        "ensemble_methods": "mean",
        "seeding": 123
    },
    "model_eval_config": {
        "model_select_level": ["model_id"],
        "model_select_full": true,
        "report_level": ["model_id"],
        "error_metrics_to_report": ["ACC", "BIAS"],
        "set_loss": "select_loss",
        "naive_lag": 12,
        "byof_columns": [],
        "create_naive_forecast": false,
        "eval_metric": "wape"

 

 

    },
    "feature_forecast_config": {
        "file_store_type": "csv",
        "data_path": "gs://db-shared/processed/",
        "feature_forecast_plan_cols_table": "monthly_mrd_cluster_filtered",
        "feature_forecast_plan_cols": [],
        "feature_forecast_ffill_cols": [],
        "feature_forecast_ly_shift": 28,
        "feature_forecast_ly_cols": [],
        "feature_forecast_hist_avg_cols": [],
        "feature_forecast_ts_cols": [],
        "feature_forecast_ts_algos": ["SingleExpSmoothing", "ARIMA", "AutoARIMA"],
        "feature_forecast_seasonal_periods": 4,
        "feature_forecast_ts_algo_kwargs": {
            "SingleExpSmoothing": {
                "alpha": 0.2
            },
            "DoubleExpSmoothing": {},
            "TripleExpSmoothing": {},
            "ARIMA": {
                "order": [1, 1, 1]
            },
            "SARIMA": {
                "order": [1, 0, 1],
                "seasonal_order": [1, 1, 1]
            },
            "AutoARIMA": {
                "max_p": 5,
                "max_d": 2,
                "max_q": 5
            },
            "AutoSARIMA": {
                "max_p": 5,
                "max_d": 2,
                "max_q": 5,
                "max_P": 1,
                "max_D": 1,
                "max_Q": 1
            }
        },
        "date_field_format": "%m/%d/%Y"
    }
}